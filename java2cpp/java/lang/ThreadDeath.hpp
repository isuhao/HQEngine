/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.lang.ThreadDeath
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_THREADDEATH_HPP_DECL
#define J2CPP_JAVA_LANG_THREADDEATH_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Error; } } }


#include <java/lang/Error.hpp>


namespace j2cpp {

namespace java { namespace lang {

	class ThreadDeath;
	class ThreadDeath
		: public object<ThreadDeath>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		explicit ThreadDeath(jobject jobj)
		: object<ThreadDeath>(jobj)
		{
		}

		operator local_ref<java::lang::Error>() const;


		ThreadDeath();
	}; //class ThreadDeath

} //namespace lang
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_THREADDEATH_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_THREADDEATH_HPP_IMPL
#define J2CPP_JAVA_LANG_THREADDEATH_HPP_IMPL

namespace j2cpp {



java::lang::ThreadDeath::operator local_ref<java::lang::Error>() const
{
	return local_ref<java::lang::Error>(get_jobject());
}


java::lang::ThreadDeath::ThreadDeath()
: object<java::lang::ThreadDeath>(
	call_new_object<
		java::lang::ThreadDeath::J2CPP_CLASS_NAME,
		java::lang::ThreadDeath::J2CPP_METHOD_NAME(0),
		java::lang::ThreadDeath::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



J2CPP_DEFINE_CLASS(java::lang::ThreadDeath,"java/lang/ThreadDeath")
J2CPP_DEFINE_METHOD(java::lang::ThreadDeath,0,"<init>","()V")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_THREADDEATH_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
