/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.io.SerializablePermission
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_SERIALIZABLEPERMISSION_HPP_DECL
#define J2CPP_JAVA_IO_SERIALIZABLEPERMISSION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace security { class BasicPermission; } } }


#include <java/lang/String.hpp>
#include <java/security/BasicPermission.hpp>


namespace j2cpp {

namespace java { namespace io {

	class SerializablePermission;
	class SerializablePermission
		: public object<SerializablePermission>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit SerializablePermission(jobject jobj)
		: object<SerializablePermission>(jobj)
		{
		}

		operator local_ref<java::security::BasicPermission>() const;


		SerializablePermission(local_ref< java::lang::String > const&);
		SerializablePermission(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
	}; //class SerializablePermission

} //namespace io
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_SERIALIZABLEPERMISSION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_SERIALIZABLEPERMISSION_HPP_IMPL
#define J2CPP_JAVA_IO_SERIALIZABLEPERMISSION_HPP_IMPL

namespace j2cpp {



java::io::SerializablePermission::operator local_ref<java::security::BasicPermission>() const
{
	return local_ref<java::security::BasicPermission>(get_jobject());
}


java::io::SerializablePermission::SerializablePermission(local_ref< java::lang::String > const &a0)
: object<java::io::SerializablePermission>(
	call_new_object<
		java::io::SerializablePermission::J2CPP_CLASS_NAME,
		java::io::SerializablePermission::J2CPP_METHOD_NAME(0),
		java::io::SerializablePermission::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



java::io::SerializablePermission::SerializablePermission(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
: object<java::io::SerializablePermission>(
	call_new_object<
		java::io::SerializablePermission::J2CPP_CLASS_NAME,
		java::io::SerializablePermission::J2CPP_METHOD_NAME(1),
		java::io::SerializablePermission::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
{
}



J2CPP_DEFINE_CLASS(java::io::SerializablePermission,"java/io/SerializablePermission")
J2CPP_DEFINE_METHOD(java::io::SerializablePermission,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::io::SerializablePermission,1,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_SERIALIZABLEPERMISSION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
