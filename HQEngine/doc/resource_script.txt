Basic Format:
resources {
	texture 
	shader 
	uav_buffer
	.
	.
	.
}

Unordered access supported buffer resource format:
	buffer_uav name {
		//if not specifying type, shader-use-only buffer is assumed
		type=vertex/index/draw_indirect/draw_indexed_indirect/compute_indirect
		
		num_elements=1   //number of elements. default is 1
		
		
		element_size=20  //element size in bytes, default is 4. ignored in "draw_indirect/draw_indexed_indirect/compute_indirect" buffer
		/*Note: in index buffer case, element_size determines index data type.
		For example, "element_size = 4" will create 32 bit "unsigned int" index buffer, while 
		"element_size = 2" will create 16 bit "unsigned short" index buffer
		*/
	}
	
Texture resource format, can be one of the following:
	render_target name {
		type=2d/cube/2d_uav/2d_array/2d_array_uav // default to 2D if not specified 
		has_mipmap=true/false  //default is false
		width=100
		height=100
		array_size=3   //default is 1
		
		format=r32f/r16f/rgba32f/rgba16f/rg32f/rg16f/rgba8ub/r8ui/a8ui
	}
	/* If not specified, name will be set to file name in one image source case. In other cases, no default name, resource will not be loaded if there is there's no name specified */
	texture name 
	{
		type=2d/cube // default to 2D if not specified 
		generate_mipmap=true/false //default is false
		image="image.bmp"
	}
	
	texture name 
	{
		generate_mipmap=true/false //default is false
		positive_x="img1.bmp"
		negative_x="img2.bmp"
		positive_y="img3.bmp"
		negative_y="img4.bmp"
		positive_z="img5.bmp"
		negative_z="img6.bmp"
	}
	
	//unordered access supported texture
	texture_uav name
	{
		type = 2d_uav/2d_array_uav //default is 2d_uav
		width=100
		height=100
		has_mipmap=true/false  //default is false
		array_size=3   //default is 1
		format=r32f/r16f/rgba32f/rgba16f/rg32f/rg16f/r32i/r32ui/rg32i/rg32ui/rgba32i/rgba32ui/rgba8ub
	}
	
Shader resource format:
	//name will be source file name if not being specified.
	shader name
	{
		type=vertex  // vertex/pixel/geometry/compute shader. default is vertex 
		src_type=hlsl/glsl/cg/bytecode   default is cg 
		entry=main			// entry function. default is 'main'. ignored in bytecode/glsl "src_type" 
		src="file.txt" 		// source file 
		debug=true			//default is false. ignore in Release build
		define name [=value]	// macro definition for compiling the source code. Can have more than one or none. -->
	}
