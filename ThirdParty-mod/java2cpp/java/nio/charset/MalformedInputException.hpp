/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.nio.charset.MalformedInputException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NIO_CHARSET_MALFORMEDINPUTEXCEPTION_HPP_DECL
#define J2CPP_JAVA_NIO_CHARSET_MALFORMEDINPUTEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace nio { namespace charset { class CharacterCodingException; } } } }


#include <java/lang/String.hpp>
#include <java/nio/charset/CharacterCodingException.hpp>


namespace j2cpp {

namespace java { namespace nio { namespace charset {

	class MalformedInputException;
	class MalformedInputException
		: public object<MalformedInputException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit MalformedInputException(jobject jobj)
		: object<MalformedInputException>(jobj)
		{
		}

		operator local_ref<java::nio::charset::CharacterCodingException>() const;


		MalformedInputException(jint);
		jint getInputLength();
		local_ref< java::lang::String > getMessage();
	}; //class MalformedInputException

} //namespace charset
} //namespace nio
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NIO_CHARSET_MALFORMEDINPUTEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NIO_CHARSET_MALFORMEDINPUTEXCEPTION_HPP_IMPL
#define J2CPP_JAVA_NIO_CHARSET_MALFORMEDINPUTEXCEPTION_HPP_IMPL

namespace j2cpp {



java::nio::charset::MalformedInputException::operator local_ref<java::nio::charset::CharacterCodingException>() const
{
	return local_ref<java::nio::charset::CharacterCodingException>(get_jobject());
}


java::nio::charset::MalformedInputException::MalformedInputException(jint a0)
: object<java::nio::charset::MalformedInputException>(
	call_new_object<
		java::nio::charset::MalformedInputException::J2CPP_CLASS_NAME,
		java::nio::charset::MalformedInputException::J2CPP_METHOD_NAME(0),
		java::nio::charset::MalformedInputException::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


jint java::nio::charset::MalformedInputException::getInputLength()
{
	return call_method<
		java::nio::charset::MalformedInputException::J2CPP_CLASS_NAME,
		java::nio::charset::MalformedInputException::J2CPP_METHOD_NAME(1),
		java::nio::charset::MalformedInputException::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::nio::charset::MalformedInputException::getMessage()
{
	return call_method<
		java::nio::charset::MalformedInputException::J2CPP_CLASS_NAME,
		java::nio::charset::MalformedInputException::J2CPP_METHOD_NAME(2),
		java::nio::charset::MalformedInputException::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::nio::charset::MalformedInputException,"java/nio/charset/MalformedInputException")
J2CPP_DEFINE_METHOD(java::nio::charset::MalformedInputException,0,"<init>","(I)V")
J2CPP_DEFINE_METHOD(java::nio::charset::MalformedInputException,1,"getInputLength","()I")
J2CPP_DEFINE_METHOD(java::nio::charset::MalformedInputException,2,"getMessage","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_NIO_CHARSET_MALFORMEDINPUTEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
